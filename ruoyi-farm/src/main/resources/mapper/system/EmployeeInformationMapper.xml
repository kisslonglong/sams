<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.EmployeeInformationMapper">
    
    <resultMap type="EmployeeInformation" id="EmployeeInformationResult">
        <result property="id"    column="id"    />
        <result property="nickName"    column="nick_name"    />
        <result property="sex"    column="sex"    />
        <result property="contactInformation"    column="contact_information"    />
        <result property="userId"    column="user_id"    />
        <result property="name" column="name"/>
        <result property="resumeAttachments" column="resume_attachments"/>
    </resultMap>

    <resultMap id="EmployeeInformationWorkExperienceResult" type="EmployeeInformation" extends="EmployeeInformationResult">
        <collection property="workExperienceList" ofType="WorkExperience" column="id" select="selectWorkExperienceList" />
    </resultMap>

    <resultMap type="WorkExperience" id="WorkExperienceResult">
        <result property="id"    column="id"    />
        <result property="companyName"    column="company_name"    />
        <result property="post"    column="post"    />
        <result property="startDate"    column="start_date"    />
        <result property="endDate"    column="end_date"    />
        <result property="eid"    column="eid"    />

    </resultMap>

    <sql id="selectEmployeeInformationVo">
        select id, nick_name, sex, contact_information, user_id,name, resume_attachments from employee_information
    </sql>

    <select id="selectEmployeeInformationList" parameterType="EmployeeInformation" resultMap="EmployeeInformationResult">
        <include refid="selectEmployeeInformationVo"/>
        <where>  
            <if test="nickName != null  and nickName != ''"> and nick_name like concat('%', #{nickName}, '%')</if>
            <if test="sex != null  and sex != ''"> and sex = #{sex}</if>
            <if test="contactInformation != null  and contactInformation != ''"> and contact_information = #{contactInformation}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
        </where>
    </select>
    
    <select id="selectEmployeeInformationById" parameterType="Long" resultMap="EmployeeInformationWorkExperienceResult">
        select id, nick_name, sex, contact_information, user_id,name
        from employee_information
        where id = #{id}
    </select>

    <select id="selectWorkExperienceList" resultType="WorkExperience" resultMap="WorkExperienceResult">
        select id, company_name, post, start_date, end_date, eid
        from work_experience
        where eid = #{eid}
    </select>

    <insert id="insertEmployeeInformation" keyProperty="id" useGeneratedKeys="true" parameterType="EmployeeInformation">
        insert into employee_information
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="nickName != null">nick_name,</if>
            <if test="sex != null">sex,</if>
            <if test="contactInformation != null">contact_information,</if>
            <if test="userId != null">user_id,</if>
            <if test="name != null">name,</if>
            <if test="resumeAttachments != null">resume_attachments,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="nickName != null">#{nickName},</if>
            <if test="sex != null">#{sex},</if>
            <if test="contactInformation != null">#{contactInformation},</if>
            <if test="userId != null">#{userId},</if>
            <if test="name != null">#{name},</if>
            <if test="resumeAttachments != null">#{resumeAttachments},</if>
         </trim>
    </insert>

    <update id="updateEmployeeInformation" parameterType="EmployeeInformation">
        update employee_information
        <trim prefix="SET" suffixOverrides=",">
            <if test="nickName != null">nick_name = #{nickName},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="contactInformation != null">contact_information = #{contactInformation},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="name != null">name = #{name},</if>
            <if test="resumeAttachments != null">resume_attachments = #{resumeAttachments},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEmployeeInformationById" parameterType="Long">
        delete from employee_information where id = #{id}
    </delete>

    <delete id="deleteEmployeeInformationByIds" parameterType="String">
        delete from employee_information where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteWorkExperienceByEids" parameterType="String">
        delete from work_experience where eid in 
        <foreach item="eid" collection="array" open="(" separator="," close=")">
            #{eid}
        </foreach>
    </delete>

    <delete id="deleteWorkExperienceByEid" parameterType="Long">
        delete from work_experience where eid = #{eid}
    </delete>

    <insert id="batchWorkExperience">
        insert into work_experience( id, company_name, post, start_date, end_date, eid) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.companyName}, #{item.post}, #{item.startDate}, #{item.endDate}, #{item.eid})
        </foreach>
    </insert>
</mapper>